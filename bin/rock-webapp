#! /usr/bin/env ruby

require 'eventmachine'
require 'rack'
require 'rack/cors'
require 'thin'
require 'orocos'


thin_host = '0.0.0.0'
thin_port = 9292
name_server_host = 'localhost'
$enable_cors = false

options = OptionParser.new do |opt|
    opt.on('--host', String, 'the host of the name server that should be contacted (default to localhost)') do |host|
        name_server_host = host
    end
    opt.on('--bind', String, 'the host the server should bind to (default to 0.0.0.0)') do |host|
        thin_host = host
    end
    opt.on('--port', Integer, "the server's port (default to #{thin_port})") do |port|
        thin_port = port
    end
    opt.on('--cors', "allow Cross-Origin Resource Sharing, JavaScript may access api even when loaded from other source than this server") do
    	puts "CORS enabled"
        $enable_cors = true
    end
end
options.parse ARGV

#has to be required after parsing the options in order to evaluate enable_cors correctly
require 'orocos/webapp'

Orocos::CORBA.name_service.ip = name_server_host
Orocos.initialize

Faye::WebSocket.load_adapter('thin')

thin = Rack::Handler.get('thin')
app  = Orocos::WebApp::Root.new
EM.next_tick { Orocos::WebApp.install_event_loop }
thin.run(app, Host: thin_host, Port: thin_port)

